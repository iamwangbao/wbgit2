<?xml version="1.0" encoding="UTF-8"?>

<beans

        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"


>


   <bean id="Down"
       class="com.down.ssm.service.impl.MyThread"
       scope="prototype"
       >
   <!--      <property name="message" value="Hello World!"/> -->
   </bean>


    <!-- 自动扫描(自动注入) -->
    <context:component-scan base-package="com.down.ssm.dao"/>
    <!-- 开启注解 -->
    <context:annotation-config />

    <!-- 一、使用数据库连接池注册数据源,引入相关的配置文件 -->
    <import resource="druid.xml"/>

    <!--
   <import resource="c3p0.xml"/>
    -->

    <!-- 二、创建mybatis会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"   scope="prototype">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/down/ssm/dao/DownInformationMapper.xml"/>
    </bean>


    <!-- 三、创建mybatis会话template -->
    <!--
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="BATCH" />
    </bean>
-->


    <!--实例化Dao-->
    <bean id="downInformationDao" class="com.down.ssm.service.impl.DownInformationImpl"   scope="prototype">
        <!-- 注入SqlSessionFactory对象实例-->
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>



    <!-- 注册接口类的bean，使得程序中可以用注解方式获取 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.down.ssm.dao" />
    </bean>

    <!-- 开启扫描 -->
    <context:component-scan base-package="com.down.ssm.service.impl" />


</beans>